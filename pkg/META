version = "%%VERSION%%"
description = "Future values for asynchronous programming"
archive(byte) = "fut.cma"
archive(byte, plugin) = "fut.cma"
archive(native) = "fut.cmxa"
archive(native, plugin) = "fut.cmxs"
archive(byte,toploop) += "fut_top.cma"
archive(native,toploop) += "fut_top.cmxa"
exists_if = "fut.cma"

package "top" (
 version = "%%VERSION%%"
 description = "Toplevel module for Fut"
 requires = "compiler-libs.toplevel"
 archive(byte) = "fut_top.cma"
 archive(byte, plugin) = "fut_top.cma"
 archive(native) = "fut_top.cmxa"
 archive(native, plugin) = "fut_top.cmxs"
 exists_if = "fut_top.cma"
)

package "u" (
  version = "%%VERSION%%"
  requires = "unix fut"
  description = "Unix system calls as futures"
  archive(byte) = "futu.cma"
  archive(byte) = "futu.cma"
  archive(byte, plugin) = "futu.cma"
  archive(native) = "futu.cmxa"
  archive(native, plugin) = "futu.cmxs"
  exists_if = "futu.cma"
)

package "select" (
  version = "%%VERSION%%"
  description = "Fut's UNIX select(2) backend"
  requires = "threads unix fut"
  archive(byte) = "fut_select.cma"
  archive(byte, plugin) = "fut_select.cma"
  archive(native) = "fut_select.cmxa"
  archive(native, plugin) = "fut_select.cmxs"
  exists_if = "fut_select.cma"
)

package "jsoo" (
  version = "%%VERSION%%"
  description = "Fut's js_of_ocaml backend"
  requires = "fut js_of_ocaml js_of_ocaml.syntax"
  archive(byte) = "fut_jsoo.cma"
  archive(byte, plugin) = "fut_jsoo.cma"
  archive(native) = "fut_jsoo.cmxa"
  archive(native, plugin) = "fut_jsoo.cmxs"
  exists_if = "fut_jsoo.cma"
)
