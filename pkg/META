description = "Future values for asynchronous programming"
version = "%%VERSION%%"
requires = ""
archive(byte) = "fut.cma"
archive(native) = "fut.cmxa"
plugin(byte) = "fut.cma"
plugin(native) = "fut.cmxs"

package "u" (
  version = "%%VERSION%%"
  requires = "bytes unix fut"
  description = "Unix system calls as futures"
  archive(byte) = "futu.cma"
  archive(native) = "futu.cmxa"
  plugin(byte) = "futu.cma"
  plugin(native) = "futu.cmxs"
  exists_if = "futu.cma"
)

package "r" (
  version = "%%VERSION%%"
  requires = "react fut"
  description = "Futures as React events and vice-versa"
  archive(byte) = "futr.cma"
  archive(native) = "futr.cmxa"
  plugin(byte) = "futr.cma"
  plugin(native) = "futr.cmxs"
  exists_if = "futr.cma"
)

# Backends

# For toplevel we need to load the backend before fut since the
# backend provides the implementation for Fut_backend that fut needs.
# The user should just #require directly the backend, this
# will load things properly modulo a #thread invocation before (FIXME: is
# it possible to have this invocation ensured automatically ?).

package "backend-base" (
  version = "%%VERSION%%"
  description = "Fut's backend base library"
  requires = ""
  archive(byte) = "fut_backend_base.cma"
  archive(native) = "fut_backend_base.cmxa"
  plugin(byte) = "fut_backend_base.cma"
  plugin(native) = "fut_backend_base.cmxs"
  exists_if = "fut_backend_base.cma"
)

package "select" (
  version = "%%VERSION%%"
  description = "Fut's UNIX select(2) backend"
  requires = "threads unix fut.backend-base"
  directory = "select"
  archive(byte) = "fut_select.cma"
  archive(native) = "fut_select.cmxa"
  plugin(byte) = "fut_select.cma"
  plugin(native) = "fut_select.cmxs"
  exists_if = "fut_select.cma"
)

package "jsoo" (
  version = "%%VERSION%%"
  description = "Fut's js_of_ocaml backend"
  requires = "js_of_ocaml fut.backend-base"
  directory = "jsoo"
  archive(byte) = "fut_jsoo.cma"
  archive(native) = "fut_jsoo.cmxa"
  plugin(byte) = "fut_jsoo.cma"
  plugin(native) = "fut_jsoo.cmxs"
  exists_if = "fut_jsoo.cma"
)
